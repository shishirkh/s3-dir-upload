---
{{- if .Values.sentinel.enabled }}
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ template "cm-crdb-redisio.fullname" . }}-sentinel
  labels:
    {{- include "cm-crdb-redisio.common_labels" . | indent 4 }}
spec:
  serviceName: {{ template "cm-crdb-redisio.fullname" . }}-sentinel-nodes
  podManagementPolicy: "Parallel"
  replicas: {{ .Values.sentinel.count }}
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      {{- include "cm-crdb-redisio.common_labels" . | indent 6 }}
      type: sentinel
  template:
    metadata:
      labels:
        {{- include "cm-crdb-redisio.common_labels" . | indent 8 }}
        type: sentinel
        release: {{ .Release.Name }}
        vnfType  : {{ .Values.global.vnftype }}
        vnfName :  {{ .Values.global.vnfname }}
        vnfcType : {{ .Values.global.vnfctype }}
        serviceType: CM
        vnfMajorRelease: "{{ .Values.global.metadata_max_release }}"
        vnfMinorRelease: "{{ .Values.global.metadata_min_release }}"
      annotations:
        config/checksum: {{ .Values.sentinel.confInclude | sha256sum }}
    spec:
      securityContext:
        runAsUser: 6379
        runAsGroup: 6379
        fsGroup: 6379
      {{- if .Values.rbacEnabled }}
      serviceAccountName: {{ template "cm-crdb-redisio.fullname" . }}
      {{- end }}
      initContainers:
      - name: config
        {{- include "cm-crdb-redisio.sentinel.image" . | indent 8 }}
        securityContext:
          runAsUser: 6379
        command: [ "/usr/bin/harmonize_log", "--service=redisio-init", "/docker-entrypoint.sh"  ]
        args: [ "init", "sentinel" ]
        env:
        - name: DEBUG
          value: {{ quote (.Values.sentinel.debug | default "") }}
        - name: GROUP_NAME
          value: cmmaster
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "cm-crdb-redisio.fullname" . }}-redis-secrets
              key: redis-password
        volumeMounts:
        - name: cluster-cm
          mountPath: /cluster
        - name: import-cm
          mountPath: /import
          readOnly: true
        - name: datadir
          mountPath: /redisdb
        resources:
          limits:
            cpu: {{ .Values.initcontainer.resources.limits.cpu | default "1000m" | quote }}
            memory: {{ .Values.initcontainer.resources.limits.memory | default "1024Mi" | quote }}
          requests:
            cpu: {{ .Values.initcontainer.resources.requests.cpu | default "100m" | quote }}
            memory: {{ .Values.initcontainer.resources.requests.memory | default "256Mi" | quote }}
      containers:
      - name: sentinel
        {{- include "cm-crdb-redisio.sentinel.image" . | indent 8 }}
        securityContext:
          runAsUser: 6379
        ports:
        - containerPort: 26379
          name: sentinel
        args: [ "sentinel" ]
        env:
        - name: DEBUG
          value: {{ quote (.Values.sentinel.debug | default "") }}
        - name: GROUP_NAME
          value: cmmaster
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: _CRDB_REDISIO_SENTINEL_BIND
          value: "$(POD_IP) 127.0.0.1"
        - name: _CRDB_REDISIO_SENTINEL_PORT
          value: "26379"
        #- name: _CRDB_REDISIO_SENTINEL_SENTINEL_ANNOUNCE_IP
          #value: $(POD_IP)
        #- name: _CRDB_REDISIO_SENTINEL_SENTINEL_ANNOUNCE_PORT
          #value: "26379"
        volumeMounts:
        - name: cluster-cm
          mountPath: /cluster
        - name: datadir
          mountPath: /redisdb
#        livenessProbe:
#          exec:
#            command:
#            - bash
#            - "-c"
#            - |
#              /usr/bin/redis-cli -h ${POD_IP} -p 26379 ping && /usr/bin/redis-cli -p 26379 ping
#          initialDelaySeconds: 180
#          periodSeconds: 10
#          timeoutSeconds: 5
#          failureThreshold: 6
#        readinessProbe:
#          exec:
#            command:
#            - bash
#            - "-c"
#            - |
#              /usr/bin/redis-cli -h ${POD_IP} -p 26379 ping && /usr/bin/redis-cli -p 26379 ping
#          initialDelaySeconds: 10
#          periodSeconds: 20
#          timeoutSeconds: 2
#          failureThreshold: 3
        resources:
{{ toYaml .Values.sentinel.resources | indent 10 }}

      # Redis Sentinel metrics exporter container
      {{- if and (.Values.sentinel.metrics) .Values.sentinel.metrics.enabled }}
      - name: metrics
        {{- include "cm-crdb-redisio.sentinel.metrics.image" . | indent 8 }}
        resources:
{{ toYaml .Values.sentinel.metrics.resources | indent 10 }}
        securityContext:
          runAsUser: 6379
        env:
        - name: REDIS_ADDR
          value: redis://127.0.0.1:26379
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "cm-crdb-redisio.fullname" . }}-redis-secrets
              key: redis-password
        ports:
        - name: metrics
          containerPort: 9121
      {{- end }}

      volumes:
      - name: import-cm
        configMap:
          name: {{ template "cm-crdb-redisio.fullname" . }}-sentinel-config
      - name: cluster-cm
        configMap:
          name: {{ template "cm-crdb-redisio.fullname" . }}-cluster-config
      - name: datadir
        emptyDir: {}
#      {{- if .Values.sentinel.nodeSelector }}
#      nodeSelector:
#      {{- range $key, $value := .Values.sentinel.nodeSelector }}
#        {{ $key }}: {{ $value | quote }}
#      {{- end }}
#      {{- end }}
      affinity:
        podAntiAffinity:
        {{- if eq (default "hard" .Values.nodeAntiAffinity) "hard" }}
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ template "cm-crdb-redisio.fullname" . }}
              - key: type
                operator: In
                values:
                - sentinel
            topologyKey: "kubernetes.io/hostname"
          preferredDuringSchedulingIgnoredDuringExecution:
        {{- else }}
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ template "cm-crdb-redisio.fullname" . }}
                - key: type
                  operator: In
                  values:
                  - sentinel
              topologyKey: "kubernetes.io/hostname"
        {{- end }}
          - weight: 50
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ template "cm-crdb-redisio.fullname" . }}
                - key: type
                  operator: In
                  values:
                  - sentinel
              topologyKey: "failure-domain.beta.kubernetes.io/zone"
{{- end }}

apiVersion: v1
kind: ConfigMap
metadata:
  name: configmapcma
  namespace: {{ .Release.Namespace }}
  labels:
    app: configmapcma-label
    chart: {{ template "custom-metrics.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  envoy.yaml: |-
    admin:
      access_log_path: "/var/DebugTrace/EnvoySideCar/envoyaccess.log"
      address:
        socket_address:
          address: 127.0.0.1
          port_value: 8001
          protocol: TCP
    stats_flush_interval:
      seconds: 5
    static_resources:
      listeners:
      - name: cma
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 7051
            protocol: TCP
        filter_chains:
        - filters:
          - name: envoy.tcp_proxy
            config:
              stat_prefix: cma
              cluster: custom-metric
              access_log:
                name: envoy.file_access_log
                config:
                  path: "/var/DebugTrace/EnvoySideCar/customMetricAdapter.log"

      - name: appeps
        address:
          socket_address:
            address: 127.0.0.1
            port_value: 6061
            protocol: TCP
        filter_chains:
          filters:
          - name: envoy.http_connection_manager
            config:
              codec_type: AUTO
              stat_prefix: app
              route_config:
                name: appeps
                virtual_hosts:
                - name: appeps
                  domains:
                  - "*"
                  routes:
                  - match:
                      prefix: "/"
                    route:
                      cluster: epsserver
                      timeout:
                        seconds: 1800
                    decorator:
                      operation: appeps
                  require_tls: NONE
              http_filters:
              - name: envoy.router
                config: {}
              tracing:
                operation_name: INGRESS
              server_name: envoy-ingress-app
              idle_timeout:
                seconds: 1800
              drain_timeout:
                seconds: 1800
              access_log:
                name: envoy.file_access_log
                config:
                  path: "/var/DebugTrace/EnvoySideCar/envoyeps.log"
              generate_request_id: true

      - name: toeventdb
        address:
          socket_address:
            address: 127.0.0.1
            port_value: 8888
            protocol: TCP
        filter_chains:
          filters:
          - name: envoy.http_connection_manager
            config:
              codec_type: AUTO
              stat_prefix: toeventdb
              route_config:
                name: toeventdb
                virtual_hosts:
                - name: toeventdb
                  domains:
                  - "*"
                  routes:
                  - match:
                      prefix: "/nokia_ztsl_EventProcessingService_v1.EventProviderService"
                    route:
                      cluster: logreceiver
                      timeout:
                        seconds: 1800
                    decorator:
                      operation: toeventdb
                  require_tls: NONE
              http_filters:
              - name: envoy.router
                config: {}
              tracing:
                operation_name: INGRESS
              server_name: envoy-ingress-app
              idle_timeout:
                seconds: 1800
              drain_timeout:
                seconds: 1800
              access_log:
                name: envoy.file_access_log
                config:
                  path: "/var/DebugTrace/EnvoySideCar/envoylogservice.log"
              generate_request_id: true

      clusters:
      - name: custom-metric
        type: STRICT_DNS
        connect_timeout:
          seconds: 1800
        lb_policy: ROUND_ROBIN
        hosts:
        - socket_address:
            address: 127.0.0.1
            port_value: 9090
            protocol: TCP

      - name: logreceiver
        type: STRICT_DNS
        connect_timeout:
          seconds: 1800
        lb_policy: ROUND_ROBIN
        dns_resolvers:
        - socket_address:
            address: 127.0.0.1
            port_value: 8600
            protocol: UDP
        hosts:
        - socket_address:
            address: logreceiver-service-{{.Values.global.clustername}}.service.{{.Values.global.datacenter }}
            port_value: 8080
            protocol: TCP
        tls_context:
         common_tls_context:
          tls_params:
            tls_minimum_protocol_version: "TLSv1_2"
          tls_certificates:
          - certificate_chain:
             filename: "/certs/cert.pem"
            private_key:
             filename: "/certs/key.pem"
          validation_context:
            trusted_ca:
             filename: "/certs/cacert.pem"
        http2_protocol_options: {}

      - name: epsserver
        type: STRICT_DNS
        connect_timeout:
          seconds: 1800
        lb_policy: ROUND_ROBIN
        dns_resolvers:
        - socket_address:
            address: 127.0.0.1
            port_value: 8600
            protocol: UDP
        hosts:
        - socket_address:
            address: eventreceiver-service-{{.Values.global.clustername}}.service.{{.Values.global.datacenter }}
            port_value: 8080
            protocol: TCP
        tls_context:
         common_tls_context:
          tls_params:
            tls_minimum_protocol_version: "TLSv1_2"
          tls_certificates:
          - certificate_chain:
              filename: "/certs/cert.pem"
            private_key:
              filename: "/certs/key.pem"
          validation_context:
            trusted_ca:
              filename: "/certs/cacert.pem"
        http2_protocol_options: {}

{{- if eq .Values.fluentd.kind "StatefulSet" }}
apiVersion: apps/v1beta1
kind: StatefulSet 
metadata:
  name: {{ template "fullname" .  }}-statefulset
  labels:
    k8s-app: {{ template "fullname" .  }}-es
    version: v1.22
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  serviceName: ""
  podManagementPolicy: {{ .Values.fluentd.podManagementPolicy }}
  updateStrategy:
{{ toYaml .Values.fluentd.updateStrategy | indent 4 }}
  replicas: {{.Values.fluentd.replicas}}
  template:
    metadata:
      labels:
        k8s-app: {{ template "fullname" .  }}-es
        kubernetes.io/cluster-service: "true"
        version: v1.22
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
        checksum/config: {{ include (print $.Template.BasePath "/fluentd_configmap.yaml") . | sha256sum }}
    spec:
      {{- if .Values.fluentd.enable_root_privilege }}
      serviceAccount: {{ template "fullname" .  }}-serviceaccount
      {{- if .Values.fluentd.securityContext.privileged }}
      securityContext:
        privileged: {{.Values.fluentd.securityContext.privileged}}
      {{- end }}
      {{- else }}
      serviceAccountName: ""
      securityContext:
       fsGroup: 998
       runAsNonRoot: true
       runAsUser: 999
      {{- end }}
      {{- if .Values.fluentd.affinity }}
      affinity:
{{ toYaml .Values.fluentd.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.fluentd.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.fluentd.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.fluentd.tolerations }}
      tolerations:
{{ toYaml .Values.fluentd.tolerations | indent 8 }}
      {{- end }}
      containers:
      - name: {{ template "fullname" .  }}-statefulset
        image: {{ .Values.global.registry }}/{{.Values.fluentd.image.repo}}:{{.Values.fluentd.image.tag}}
        imagePullPolicy: {{.Values.fluentd.ImagePullPolicy}}
        ports:
        - name: forwarder
          containerPort: {{ .Values.fluentd.service.port }}
          protocol: TCP
        - name: metrics
          containerPort: {{ .Values.fluentd.service.metricsPort }}
          protocol: TCP
        resources:
{{ toYaml .Values.fluentd.resources | indent 10 }}
        env:
          - name: HOST
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: SYSTEM
            value: "{{.Values.fluentd.EnvVars.system}}"
          - name: SYSTEMID
            value: "{{.Values.fluentd.EnvVars.systemId}}"
        volumeMounts:
        - name: fluentd-dir
          mountPath: /data
        {{- if .Values.fluentd.volume_mount_enable }}
{{ toYaml .Values.fluentd.volumeMounts | indent 8 }}
        {{- end }}
        {{- if .Values.fluentd.fluentd_certificates.enabled }}
        - name: ssl
          mountPath: "/etc/td-agent/certs"
          readOnly: true
        {{- end }}
        - name: config-volume 
          mountPath: /etc/td-agent/ 
      volumes:
      {{- if .Values.fluentd.fluentd_certificates.enabled }}
      - name: ssl
        secret:
          secretName: {{ template "fullname" . }}
          items:
{{- range $key, $val := .Values.fluentd.fluentd_certificates.data }}
          - key: {{  $key }}
            path: {{ $key }}
{{- end }}
      {{- end }}
      {{- if .Values.fluentd.volume_mount_enable }}
{{ toYaml .Values.fluentd.volumes | indent 6 }}
      {{- end }}
      - name: config-volume 
        configMap:
          name: {{ template "fullname" .  }}-config
  volumeClaimTemplates:
  - metadata: 
      name: fluentd-dir
      labels:
       app: {{ template "fullname" . }}
       release: "{{ .Release.Name }}"
    spec:
      accessModes:
        - {{ .Values.fluentd.persistence.accessMode | quote }}
      resources:
        requests:
          storage: {{ .Values.fluentd.persistence.size | quote }}
    {{- if .Values.fluentd.persistence.storageClassName }}
      storageClassName: "{{ .Values.fluentd.persistence.storageClassName }}"
    {{- end }}
{{- end }}

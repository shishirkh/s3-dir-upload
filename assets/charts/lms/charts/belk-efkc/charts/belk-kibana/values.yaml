## ref: https://confluence.app.alcatel-lucent.com/display/plateng/HELM+Application+Deployment+-+LIFECYCLE#HELMApplicationDeployment-LIFECYCLE-RelocatableChart
### global registry
global:
 registry: csf-docker-delivered.repo.lab.pl.alcatel-lucent.com
 registry2: csf-docker-delivered.repo.lab.pl.alcatel-lucent.com
 seccompAllowedProfileNames: docker/default
 seccompDefaultProfileName: docker/default
service:
  type: "ClusterIP"
  # optional
  # name: kibana

kibana:
  replicas: 2
  image: 
    repo: lms/belk-efkc/elk_k
    tag: 7.0.1-19.12.0
  resources:
    limits:
      cpu: "1000m"
      memory: "2Gi"
    requests:
      cpu: "500m"
      memory: "1Gi"
  port: 5601
  node_port: 30601
  ImagePullPolicy: "IfNotPresent"
  initialDelaySeconds: 120
  configMaps:
    kibana_configmap_yml: |-
      ---
      # Donot change sever name and host. This is default configuration.
      server.name: kibana
      server.customResponseHeaders: { "X-Frame-Options": "DENY" }
      #Enable server.ssl.supportedProtocols when SG is enabled. 
      #server.ssl.supportedProtocols: ["TLSv1.2"]
      #kibana supports sentinl plugin which is used for Alerting and Reporting. Please follow https://sentinl.readthedocs.io/en/docs/Config-Example/ link for configuration.
      # Whitelist basic headers and multi tenancy header
      #elasticsearch.requestHeadersWhitelist: [ "Authorization", "sgtenant", "x-forwarded-for", "x-proxy-user", "x-proxy-roles" ] 

        # uncomment below section for keycloak authentication and provide required correct parameters
      #searchguard.auth.type: "openid"
      #searchguard.openid.connect_url: "https://<keyclaok-ip>:<port>/auth/realms/<realm-name>/.well-known/openid-configuration"
      #searchguard.openid.client_id: "<client-id>"
      #searchguard.openid.client_secret: "<client-secret>"
      #searchguard.openid.header: "Authorization"
        ### for kibana service on ingress port is not required
      #searchguard.openid.base_redirect_url: "https://<kibana-ip>:<port>"
        ### Do not change root_ca file path as this is the default mount path.
      #searchguard.openid.root_ca: "/etc/kibana/certs/keycloak-root-ca.pem"

        # Uncomment below section for sane sso and provide required correct parameters
      #csan.enabled: "true"
      #csan.ssoproxy.url: https://<csan-ssoproxy-service-hostname>:<port>
      #searchguard.auth.unauthenticated_routes: ["/api/status", "/csan/v1/sso"]

  env:
   # if searchguard enabled use https instead of http. Please provide proper elasticsearch url to connect elasticsearch
   # if you have elasticsearch service in paas namespace, you can access it using 'elasticsearch.paas'
   # if SG is enabled then uncomment SSl and certificate parameters.
   - name: "ELASTICSEARCH_HOSTS"
     value: "http://elasticsearch:9200"
   #- name: "SERVER_SSL_ENABLED"
   #  value: "true"
   #- name: "SERVER_SSL_CERTIFICATE"
   #  value: "/etc/kibana/certs/kibana.crt.pem"
   #- name: "SERVER_SSL_KEY"
   #  value: "/etc/kibana/certs/kibana.key.pem"
  sslsecretvolume:
    #- key: secret_server_ssl_cert
      #path: secret_server_ssl_cert
  
  ## Node labels for pod assignment
  #### ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  nodeSelector: {}

  ## Toleration is asking the K8S schedule to ignore a taint
  #### ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

  ## Pod scheduling preferences.
  ### ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}
  
kibanabaseurl:
  url: "/kibana"
  #Do not change cg(capture group) parameter below unless you want to change/modify nginx rewrite-target for kibana ingress
  cg: "/?(.*)"

cbur:
  enabled: false
  #the maximum copy you want to saved.
  maxCopy: 5
  #Modes supported now: "local","NETBKUP","AVAMAR","CEPHS3","AWSS3", case insensitive
  backendMode: "local"
  #It is used for scheduled backup task
  cronJob: "0 23 * * *"
  #Set below parameters to true for auto enabling cron job
  autoEnableCron: false
 
ingress:
  enabled: true
  # If SG is enabled then uncomment 3 annotations. i.e ingress.class, ssl-passthrough, secure-backends.
  annotations:
    ingress.citm.nokia.com/sticky-route-services: $cookie_JSESSIONID|JSESSIONID ip_cookie
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    #kubernetes.io/ingress.class: nginx
    #nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    #nginx.ingress.kubernetes.io/secure-backends: "true"
  ## Kibana Ingress hostnames
  ## May be provided if Ingress is enabled
  #host: "*"
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

searchguard:
  image:
    repo: elk_k_sg
    tag: 7.0.1-19.12.01
  enable: false
# if authentication is required via keycloak, then set keycloak_auth to true and provide base64 format of keycloak rootCA under base64_keycloak_rootca_pem
  keycloak_auth: false
  base64_keycloak_rootca_pem: <base64_keycloak_rootCA_pem>
  # Create base64 encoding for keystore, keystorepasswd, truststore, truststorepasswd file and provide to below variables.
  # base64 encoding for passwords use below command
  # echo -n <string in double quotes> | base64
  # base64 encoding for files  use below command
  # base64 <filename>  | tr -d '\n'
  base64_kib_es_username: <base64_kibana_username>
  base64_kib_es_password: <base64_kibana_pwd>
  base64_ES_RootCA: <base64-elasticsearch_root-ca.pem>
  base64ServerCrt: <base64-kibana-crt>
  base64ServerKey: <base64-kibana-key>
  kibana:
    es_ssl_verification_mode: certificate

## in case of sane with keycloak uncomment below section and provide required correct parameters
#sane:
  #keycloak_admin_user_name: <base64_keycloak_admin_username>
  #keycloak_admin_password: <base64_keycloak_admin_password>
  #keycloak_sane_user_password: <base64_default_password_for_saneuser>
alpinecurl:
  image:
   repo: alpine-curl
   tag: 1.5.1

{{ if gt (int .Values.global.preheal ) 0 }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "fullname" . }}-preheal
spec:
  template:
    spec:
      restartPolicy: Never
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: {{ template "fullname" . }}-preheal
        image: {{.Values.global.registry}}/{{.Values.elasticsearch_master.image.repo}}:{{.Values.elasticsearch_master.image.tag}}
        imagePullPolicy: IfNotPresent
        command:
        - bash
        - "-c"
        - |
          {{- if .Values.searchguard.enable }}
          clusterHealth=$(curl --insecure --cert /etc/elasticsearch/certs/admin.crt.pem --key /etc/elasticsearch/certs/admin.key.pem  -s --connect-timeout 1 --location https://{{ .Values.service.name}}.{{.Release.Namespace}}:9200/_cat/health | cut -d ' ' -f 4)
          {{- else }}
          clusterHealth=$(curl -s --connect-timeout 1 --location http://{{ .Values.service.name}}.{{.Release.Namespace}}:9200/_cat/health | cut -d ' ' -f 4)
          {{- end }}
          echo "Cluster health is $clusterHealth"
          if [ "${clusterHealth}" == "green" ]; then
            echo "Cluster is in proper state."
          elif [ "${clusterHealth}" == "yellow" -a {{.Values.esdata.replicas}} -eq 1 ]; then
            echo "As only 1 data pod is running, cluster health is expected to be yellow. Please contact CSF-BELK team if support is needed."
          else
            echo "Please contact CSF-BELK team for support"
          fi
        {{- if .Values.searchguard.enable }}
        volumeMounts:
        - name: ssl
          mountPath: "/etc/elasticsearch/certs/"
          readOnly: true
        {{- end }}
      {{- if .Values.searchguard.enable }}
      volumes:
      - name: ssl
        secret:
          secretName: {{ template "fullname" . }}
          items:
          - key: admin.crt.pem
            path: admin.crt.pem
          - key: admin.key.pem
            path: admin.key.pem
      {{- end }}
{{- end }}

apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ template "elasticsearch.master.fullname" . }}
  labels:
    component: elasticsearch
    role: master 
    release: {{ .Release.Name | quote }}
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: {{ .Values.global.seccompAllowedProfileNames }}
    seccomp.security.alpha.kubernetes.io/defaultProfileName: {{ .Values.global.seccompDefaultProfileName }}

spec:
  serviceName: {{ template "elasticsearch.fullname" . }}-discovery
  replicas: {{.Values.elasticsearch_master.replicas }}
  podManagementPolicy: {{ .Values.elasticsearch_master.podManagementPolicy }}
  updateStrategy:
{{ toYaml .Values.elasticsearch_master.updateStrategy | indent 4 }}
  template:
    metadata:
      labels:
        component: elasticsearch
        role: master 
        release: {{ .Release.Name | quote }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/es-secret.yaml") . | sha256sum }}
        {{- if .Values.service.prometheus_metrics.enabled }}
        {{- if .Values.searchguard.enable }}
        prometheus.io/scheme: "https"
        {{ .Values.service.prometheus_metrics.pro_annotation_https_scrape }}: "true"
        {{- else }}
        prometheus.io/scrape: "true"
        {{- end }}
        prometheus.io/path: /_prometheus/metrics
        prometheus.io/port: "9200"
        {{- end }}
    spec:
      securityContext:
#       Because we are running as non root user and group id/User id of the elasticsearch user is 1000/1000.
        fsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      {{- if or .Values.elasticsearch_master.antiAffinity .Values.elasticsearch_master.nodeAffinity }}
      affinity:
      {{- end }}
      {{- if eq .Values.elasticsearch_master.antiAffinity "hard" }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  release: {{ .Release.Name | quote }}
                  component: elasticsearch
                  role: master
      {{- else if eq .Values.elasticsearch_master.antiAffinity "soft" }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  release: {{ .Release.Name | quote }}
                  component: elasticsearch
                  role: master
      {{- end }}
      {{- with .Values.elasticsearch_master.nodeAffinity }}
        nodeAffinity:
{{ toYaml . | indent 10 }}
      {{- end }}
{{- if eq .Values.global.efkStorage "local-storage" }}
      nodeSelector:
        disktype: efkstorage
{{- else }}
{{- if .Values.elasticsearch_master.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.elasticsearch_master.nodeSelector | indent 8 }}
{{- end }}
{{- end }}
{{- if .Values.elasticsearch_master.tolerations }}
      tolerations:
{{ toYaml .Values.elasticsearch_master.tolerations | indent 8 }}
{{- end }}
      containers:
      - name: es-master
        {{- if .Values.searchguard.enable }}
        image: {{.Values.global.registry}}/{{.Values.searchguard.image.repo}}:{{.Values.searchguard.image.tag}}
        {{- else }}
        image: {{.Values.global.registry}}/{{.Values.elasticsearch_master.image.repo}}:{{.Values.elasticsearch_master.image.tag}}
        {{- end }}
        imagePullPolicy: {{.Values.elasticsearch_master.ImagePullPolicy}}
        resources:
{{ toYaml .Values.elasticsearch_master.resources | indent 10 }}
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          capabilities:
             drop:
               - all
        readinessProbe:
          tcpSocket:
            port: 9300
          initialDelaySeconds: {{ .Values.elasticsearch_master.initialDelaySeconds }}
          periodSeconds: {{ .Values.elasticsearch_master.periodSeconds }}
        env:
          - name: "CLUSTER_NAME"
            value: {{ printf "%s-%s" .Release.Namespace .Release.Name | quote }}
          - name: "NODE_MASTER"
            value: "true"
          - name: "NODE_DATA"
            value: "false"
          - name: "ES_JAVA_OPTS"
            value: "{{.Values.elasticsearch_master.es_java_opts}}"
          - name: "DISCOVERY_SERVICE"
            value: "{{ template "elasticsearch.fullname" . }}-discovery"
          - name: "NUMBER_OF_REPLICAS" 
            value: "1" 
          - name: NETWORK_HOST
            value: "{{.Values.network_host}}"
          {{- if .Values.cbur.enabled }}
          - name: "PATH_REPO"
            value: "/elasticsearch-backup"
          {{- end }}
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: CLUSTER_INITIAL_MASTER_NODES
            value: "{{ template "endpoints" . }}"
          {{- if .Values.searchguard.enable }}
          - name: HTTP_SSL
            value: "{{.Values.searchguard.http_ssl}}"
          - name: "KEYSTORE_TYPE"
            value: "{{.Values.searchguard.keystore_type}}"
          - name: "KEYSTORE_FILEPATH"
            value: "/etc/elasticsearch/certs/keystore.jks"
          - name: "KS_PWD"
            valueFrom:
              secretKeyRef:
                name: {{ template "fullname" . }}
                key: keypass
          - name: "TRUSTSTORE_TYPE"
            value: "{{.Values.searchguard.truststore_type}}"
          - name: "TRUSTSTORE_FILEPATH"
            value: "/etc/elasticsearch/certs/truststore.jks"
          - name: "TS_PWD"
            valueFrom:
              secretKeyRef:
                name: {{ template "fullname" . }}
                key: trustpass
          - name: "CLIENT_KEYSTORE_FILEPATH"
            value: "/etc/elasticsearch/certs/client-keystore.jks"
          - name: "AUTH_ADMIN_DN"
            value: "{{.Values.searchguard.auth_admin_identity}}"
          - name: "SG_CONFIG_DIRECTORY"
            value: "/usr/share/elasticsearch/plugins/search-guard-7/sgconfig/"
          {{- end }}
        ports:
        - containerPort: {{.Values.service.master_port}}
          name: transport
          protocol: TCP
        volumeMounts:
        - name: masterdir
          mountPath: /data
        {{- if .Values.cbur.enabled }}
        - name: elasticsearch-backup
          mountPath: /elasticsearch-backup
        {{- end }}
        {{- if .Values.searchguard.enable }}
        - name: ssl
          mountPath: "/etc/elasticsearch/certs/"
          readOnly: true
        - name: searchguard-config
          mountPath: "/usr/share/elasticsearch/plugins/search-guard-7/sgconfig/"
        {{- end }}
      volumes:
      {{- if .Values.cbur.enabled }}
      - name: "elasticsearch-backup"
        persistentVolumeClaim:
          claimName: {{ template "fullname" . }}-pvc
      {{- end }}
      {{- if .Values.searchguard.enable }}
      - name: ssl
        secret:
          secretName: {{ template "fullname" . }}
          items:
          - key: keystore.jks
            path: keystore.jks
          - key: truststore.jks
            path: truststore.jks
          - key: client-keystore.jks
            path: client-keystore.jks
          - key: admin.crt.pem
            path: admin.crt.pem
          - key: admin.key.pem
            path: admin.key.pem
         
      - configMap:
          name: {{ template "fullname" . }}-searchguard-config
        name: searchguard-config
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: masterdir
      labels:
       app: {{ template "fullname" . }}
       release: "{{ .Release.Name }}"
       heritage: "{{ .Release.Service }}"
    spec:
      accessModes:
        - {{ .Values.persistence.accessMode | quote }}
      resources:
        requests:
          storage: {{ .Values.persistence.masterStorage | quote }}
    {{- if .Values.persistence.storageClassName }}
      storageClassName: "{{ .Values.global.efkStorage }}"
    {{- end }}
 
